package as3_user_interface_kit.controllers{	import flash.events.MouseEvent;	import flash.filters.DropShadowFilter;		import as3_user_interface_kit.appearances.IPanelSkin;	import as3_user_interface_kit.models.ButtonMode;	import as3_user_interface_kit.views.View;
	/**	 * 未完成.	 * @private	 * パネルコンポーネント.	 * @author takanosatoshi	 *	 */	public class PanelController extends ViewController	{		private static const SHADOW:DropShadowFilter = new DropShadowFilter(10, 90, 0, 0.2, 30, 30, 0.5, 1);				/**		 * パネルの開閉を操作するボタンです.		 */		private var _closeButton:ButtonController;		private var _isOpened:Boolean = false;		/**		 * コンストラクタ.		 *		 */		public function PanelController(config:IPanelSkin)		{			view.backgroundImage = config.getBackgroundImage();			_closeButton = config.getCloseButton();			view.addChild(_closeButton.view);			_closeButton.view.buttonMode = true;			_closeButton.changeState(ButtonMode.ENABLE);			view.layoutManager.addManagedTarget(_closeButton.view, 0, 2, 5, 5);		}		/**		 * @inheritDoc		 */		override public function viewDidAppear():void		{			super.viewDidAppear();			_closeButton.view.addEventListener(MouseEvent.CLICK, panelButtonClick);		}		/**		 * @inheritDoc		 */		override public function viewDidDisappear():void		{			super.viewDidDisappear();			_closeButton.view.removeEventListener(MouseEvent.CLICK, panelButtonClick);		}		/**		 *	パネルが開いているかどうかのBool値です.		 */		public function get isOpening():Boolean		{			return _isOpened;		}		public function set isOpening(value:Boolean):void		{			_isOpened = value;			if (_isOpened)				_closeButton.changeState(ButtonMode.UNABLE);			else				_closeButton.changeState(ButtonMode.ENABLE);		}		private function panelButtonClick(e:MouseEvent):void		{					}				public function get closeButton():View		{			return _closeButton.view;		}				public function get showShadow():Boolean		{			return view.filters.length > 0;		}		public function set showShadow(val:Boolean):void		{			if (val)				view.filters = [SHADOW];			else 				view.filters = [];		}	}}